[basicConfig]
#node manager name
name = "node1"
#blockchain client RPC URL
bcClntRpcUrl = "http://localhost:22000"
privManKey = "BULeR8JyUWhiuuCMU/HLA0Q5pzkYT+cHII3ZKBey3Bo="
consensus = "raft"
clientType = "quorum"
upcheckPollingInterval = 1
nodeManagerConfigFile = "./test/docker/nm1.toml"
runMode="NORMAL"
#geth/tessera inactivity timeout seconds
inactivityTime = 60


#geth's http/ws services that need to be exposed as proxy services
proxies = [
    { name = "geth-rpc", type = "http", proxyAddr = "localhost:9091", upstreamAddr = "http://localhost:22000", proxyPaths = ["/"], readTimeout = 15, writeTimeout = 15 },
    { name = "tessera", type = "http", proxyAddr = "localhost:9391", upstreamAddr = "http://127.0.0.1:9001", proxyPaths = ["/version", "/upcheck", "/resend", "/push", "/partyinfo", "/partyinfo-mirror", "/partyinfo/validate"], ignorePathsForActivity=["/upcheck", "/partyinfo", "/partyinfo/validate"], readTimeout = 15, writeTimeout = 15 },
    { name = "geth-graphql", type = "http", proxyAddr = "localhost:9191", upstreamAddr = "http://localhost:8547", proxyPaths = ["/","/graphql"], readTimeout = 15, writeTimeout = 15 },
    { name = "geth-ws", type = "ws", proxyAddr = "localhost:9291", upstreamAddr = "ws://localhost:23000", proxyPaths = ["/"], readTimeout = 15, writeTimeout = 15 }
]

#rpc server details of node manager
[basicConfig.server]
# The interface + port the application should bind to
rpcAddr = "localhost:8081"
rpcCorsList = ["*"]
rpcvHosts = ["*"]

#geth's process control config
[basicConfig.bcClntProcess]
name = "bcclnt"
containerId = "c2d5e37f0908"
controlType = "docker"
upcheckCfg = { upcheckUrl = "http://localhost:22000", method = "POST", body = "{\"jsonrpc\":\"2.0\", \"method\":\"eth_blockNumber\", \"params\":[], \"id\":67}",returnType = "rpcresult"}

#tessera's process control config
[basicConfig.privManProcess]
name = "privman"
controlType = "docker"
containerId = "baa4aeffe806"
upcheckCfg = { upcheckUrl = "http://localhost:9001/upcheck", method = "GET", body = "", returnType = "string", expected = "I'm up!"}
